import Layout from '@/components/common/Layout'
import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import Breadcrumb from '@/components/common/Breadcrumb'
import { ButtonSpinner } from '@/components/Helper'
import axios from 'axios'
import { useRouter } from 'next/router'
import useSWR from 'swr'
// import 'jodit/build/jodit.min.css';


const fetcher = (url) => axios.get(url, { headers: { token: `${localStorage.getItem("lr-admin-token")}` } }).then(res => res.data)


export default function Index() {

    const [tinyloader, setTinyloader] = useState(false)
    const [formData, setFormData] = useState('')
    const router = useRouter()
    const [data, setData] = useState('')
    const [logo, setLogo] = useState()
    const [logoPre, setLogoPre] = useState()

    const [serviceCenterPreBanner, setServiceCenterPreBanner] = useState();
    const [serviceBanner, setServiceBanner] = useState()

    const [carCareCenterPreBanner, setCarCareCenterPreBanner] = useState();
    const [carCareBanner, setCarCarBanner] = useState()

    const query = router.query.id

    // if (query) {
    // const { data, error } = useSWR(`${process.env.NEXT_PUBLIC_URL}admin/view-experience-center/${query}`, fetcher)
    // if (error) console.log(error);
    // if (!data) return 'Please wait..';

    // }

    const eventChangeHandler = (e) => {
        setFormData((prevState) => ({
            ...prevState,
            [e.target.name]: e.target.value
        }));
    }

    const selectBanner = (e) => {
        setLogo(e.target.files[0])
        setLogoPre(URL.createObjectURL(e.target.files[0]));
    }

    function selectServiceBanner(e) {
        setServiceBanner(e.target.files[0])
        setServiceCenterPreBanner(URL.createObjectURL(e.target.files[0]));
    }

    function selectCarCareBanner(e) {
        setCarCarBanner(e.target.files[0])
        setCarCareCenterPreBanner(URL.createObjectURL(e.target.files[0]));
    }

    const addUpdateServiceCenter = async (e) => {
        e.preventDefault();

        setTinyloader(true);
        const formData = new FormData(document.getElementById('serviceCenterForm'));
        formData.append("center_banner", logo);
        formData.append("service_center_banner", serviceBanner);
        formData.append("car_care_banner", carCareBanner);

        const addUrl = `${process.env.NEXT_PUBLIC_URL}admin/create-experience-center`
        const updateUrl = `${process.env.NEXT_PUBLIC_URL}admin/update-expeirence-center/${query}`
        if (query) {

            await axios.patch(updateUrl, formData, {
                headers: {
                    'token': typeof window !== "undefined" ? localStorage.getItem("lr-admin-token") : false,
                }
            }).then(function (res) {
                setTinyloader(false)
                if (res.data.status == 1) {
                    alert(res.data.message)
                    router.push('/admin/service-center')
                }
            }).catch(function (error) {
                if (error.response.status === 422) {
                    alert(error.response.data.message)
                }
                setTinyloader(false)
            });
        } else {
            await axios.post(addUrl, formData, {
                headers: {
                    'token': typeof window !== "undefined" ? localStorage.getItem("lr-admin-token") : false,
                }
            }).then(function (res) {
                setTinyloader(false)
                if (res.data.status == 1) {
                    alert(res.data.message)
                    router.push('/admin/service-center')
                }
            }).catch(function (error) {
                if (error.response.status === 422) {
                    alert(error.response.data.message)
                }
                setTinyloader(false)
            });
        }
    }


    const getServiceCenter = async () => {
        await axios.get(`${process.env.NEXT_PUBLIC_URL}admin/view-experience-center/${query}`, {
            headers: {
                'token': typeof window !== "undefined" ? localStorage.getItem("lr-admin-token") : false,
            }
        }).then(function (res) {
            if (res.data.status == 1) {
                setData(res.data)
            }
        }).catch(function (error) {
            console.log(error)
        });
    }

    useEffect(() => {
        if (query) {
            getServiceCenter()
        }
    }, [query])
    console.log(data)
    return (
        <>
            <Head>
                <title>LR | {query ? 'Update Center' : 'Add Center'}  </title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="img/favicon.ico" />
            </Head>
            <Layout>
                <Breadcrumb title={query ? 'Update Center' : 'Add Center'} />
                <div className="form-style">
                    <form id="serviceCenterForm">
                        <div className="wrapper">
                            <div className="form-row">
                                <input type="hidden" id="id" defaultValue={data && data.experience_center ? data.experience_center._id : ''} />
                                <div className="form-div">
                                    <input id="name" placeholder=" " name='name' type="text" defaultValue={data && data.experience_center ? data.experience_center.name : ''} />
                                    <label htmlFor="Service Center">Center Name*</label>
                                    <small id="fuelNameError" className="error"></small>
                                </div>
                                <div className="form-div">
                                    <input id="state" placeholder=" " name='state' type="text" defaultValue={data && data.experience_center ? data.experience_center.state : ''} />
                                    <label htmlFor="State">State*</label>
                                </div>
                                <div className="form-div">
                                    <input id="city" placeholder=" " name="city" type="text" defaultValue={data && data.experience_center ? data.experience_center.city : ''} />
                                    <label htmlFor="City">City*</label>
                                </div>
                            </div>

                            <div className="form-row">
                                <div className="form-div file-upload">
                                    <div className="custom-label">Upload Showroom Banner*</div>
                                    <input type="file" id="file-upload2" onChange={(e) => selectBanner(e)} />
                                    <label htmlFor="file-upload2">Upload file*</label>
                                    <div id="file-upload-filename"></div>
                                    {/* <div className="image-des">Image Size : 1920 x 800</div> */}
                                    {logoPre ? <img src={logoPre} height="100" width="100" /> : data && data.experience_center && data.experience_center.banner ? <img src={`${process.env.NEXT_PUBLIC_URL}${data.experience_center.banner}`} height="100" width="100" /> : ''}
                                </div>

                                <div className="form-div">
                                    <input id="address_google_url" placeholder=" " name="address_google_url" type="text" defaultValue={data && data.experience_center ? data.experience_center.address_google_url : ''} />
                                    <label htmlFor="google url">Add google address url*</label>
                                </div>

                                <div className="form-div">
                                    <input id="sorting" placeholder=" " name='sorting' type="text" defaultValue={data && data.experience_center ? data.experience_center.sorting : ''} />
                                    <label htmlFor="Day time">Sorting</label>
                                </div>
                                {/* <div className="form-div">
                                    <input id="day_time" placeholder=" " name='day_time' type="text" defaultValue={data && data.experience_center ? data.experience_center.day_time : ''} />
                                    <label htmlFor="Day time">Day and Time</label>
                                </div> */}

                            </div>


                            <div className="form-row one-col">
                                <div className="form-div">
                                    <textarea placeholder=" " name='address' id="address" defaultValue={data && data.experience_center ? data.experience_center.address : ''}></textarea>
                                    <label htmlFor="shortDescription">Full address</label>
                                </div>

                            </div>

                            <div className="form-row">
                                <div className="form-div">
                                    <input id="area" placeholder=" " name="area" type="text" defaultValue={data && data.experience_center ? data.experience_center.area : ''} />
                                    <label htmlFor="Area">Sq. ft. area</label>
                                </div>


                                <div className="form-div">
                                    <input id="car_bay" placeholder=" " name="car_bay" defaultValue={data && data.experience_center ? data.experience_center.car_bay : ''} type="text" maxLength={10} />
                                    <label htmlFor="Parallel bay">Car Parallel bay</label>
                                </div>

                                <div className="form-div">
                                    <input id="daily_service" placeholder=" " defaultValue={data && data.experience_center ? data.experience_center.daily_service : ''} name="daily_service" type="text" />
                                    <label htmlFor="Manager Email">Daily service</label>
                                </div>

                            </div>

                            <div className="form-row one-col">
                                <div className="form-div">
                                    <textarea id="shortDescription" placeholder=" " name='short_description' defaultValue={data && data.experience_center ? data.experience_center.short_description : ''}></textarea>
                                    <label htmlFor="shortDescription">Short Description</label>
                                </div>

                            </div>

                            <div className='form-row'>
                                <div className="form-div">
                                    <input id="center_title" placeholder=" " name='center_title' type="text" defaultValue={data && data.experience_center ? data.experience_center.title : ''} />
                                    <label htmlFor="Service title">Center Title</label>
                                    <small id="centerTitleError" className="error"></small>
                                </div>

                                <div className="form-div file-upload">
                                    <div className="custom-label">Upload Service Banner*</div>
                                    <input type="file" id="file-upload3" onChange={(e) => selectServiceBanner(e)} />
                                    <label htmlFor="file-upload3">Upload file</label>
                                    <div id="file-upload-filenames"></div>
                                    {/* <div className="image-des">Image Size : 1920 x 800</div> */}
                                    <div class="clr"></div>
                                    {serviceCenterPreBanner ? <img src={serviceCenterPreBanner} height="100" width="100" /> : data && data.experience_center && data.experience_center.service_center_banner ? <img src={`${process.env.NEXT_PUBLIC_URL}${data.experience_center.service_center_banner}`} height="100" width="100" /> : ''}

                                </div>

                                <div className="form-div file-upload">
                                    <div className="custom-label">Upload Car Care Banner*</div>
                                    <input type="file" id="file-upload4" onChange={(e) => selectCarCareBanner(e)} />
                                    <label htmlFor="file-upload4">Upload file</label>
                                    <div id="file-upload-filenames"></div>
                                    {/* <div className="image-des">Image Size : 1920 x 800</div> */}
                                    <div class="clr"></div>
                                    {carCareCenterPreBanner ? <img src={carCareCenterPreBanner} height="100" width="100" /> : data && data.car_care_banner && data.experience_center.car_care_banner ? <img src={`${process.env.NEXT_PUBLIC_URL}${data.experience_center.car_care_banner}`} height="100" width="100" /> : ''}

                                </div>

                            </div>
                            <div className='custom-check'>
                                <div className='service-senter'>
                                    <span> Center type*</span>
                                </div>

                                <div className='form-div'>
                                    <input type="checkbox" name="center_type[]" id="html" defaultValue='service' defaultChecked={data && data.experience_center && data.experience_center.center_type[0] === 'service' ? true : false} />
                                    <label htmlFor="html">Service Center</label>
                                </div>

                                <div className='form-div'>
                                    <input type="checkbox" id="showroom" name="center_type[]" defaultValue='showroom' defaultChecked={data && data.experience_center && data.experience_center.center_type[1] === 'showroom' ? true : false} />
                                    <label htmlFor="showroom">Showroom</label>
                                </div>

                            </div>

                            {/* <div className="form-row">
                                <div className="form-div">
                                    <input id="manager_name" placeholder=" " name="manager_name" type="text" defaultValue={data && data.experience_center ? data.experience_center.manager_name : ''} />
                                    <label htmlFor="Manager Name">Manager name</label>
                                </div>


                                <div className="form-div">
                                    <input id="manager_mobile" placeholder=" " name="manager_mobile" defaultValue={data && data.experience_center ? data.experience_center.manager_mobile : ''} type="text" maxLength={10} />
                                    <label htmlFor="Manager Mobile">Manager mobile number</label>
                                </div>

                                <div className="form-div">
                                    <input id="manager_email" placeholder=" " defaultValue={data && data.experience_center ? data.experience_center.manager_email : ''} name="manager_email" type="email" />
                                    <label htmlFor="Manager Email">Manager email</label>
                                </div>

                            </div> */}
                            <div className="common-buttons">
                                <button type='button' className="green" onClick={(e) => addUpdateServiceCenter(e)} disabled={tinyloader}>
                                    <ButtonSpinner load={tinyloader} btnName="Save" />
                                </button>
                            </div>
                            <div>

                            </div>

                        </div>
                    </form>

                </div>
            </Layout>
        </>
    )
}

