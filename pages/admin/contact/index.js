import React from 'react'
import Breadcrumb from '@/components/common/Breadcrumb'
import Head from 'next/head'
import Layout from '@/components/common/Layout'
import useSWR from 'swr';
import { useRouter } from 'next/router'
import axios from 'axios';
import { convertTimeStamp, dateFormat } from '@/components/Helper';
import Paginationn from '@/components/common/Pagination';

const fetcher = (url, token) => axios.get(url, { headers: { token: `${localStorage.getItem("lr-admin-token")}` } }).then(res => res.data)

function Index() {

    const router = useRouter();
    const { page } = router.query;
    const { data, error } = useSWR(`${process.env.NEXT_PUBLIC_URL}admin/contact-list?page=${page}`, fetcher);

    // if (error) return 'Opps something went wrong'
    // if (!data) return 'Please wait ...'

    const deleteContact = async (id) => {
        console.log(id)
        await axios.get(`${process.env.NEXT_PUBLIC_URL}admin/delete-contact/${id}`, {
            headers: {
                'token': typeof window !== "undefined" ? localStorage.getItem("lr-admin-token") : false,
            }
        }).then(function (res) {
            if (res.data.status == 1) {
                alert(res.data.message);
                router.push('/admin/contact')
            }
        }).catch(function (error) {
            console.log(error)

        });
    }

    return (
        <>
            <Head>
                <title>LR | Contact/Query Data</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="img/favicon.ico" />
            </Head>
            <Layout>
                <Breadcrumb title="Contact/Query Data" />
                <div className="main-data">

                    <div className="filters">

                        <div className="wrapper">

                            <div className="search common-div">

                                <input type="text" placeholder="Search here" />
                                <button></button>

                            </div>

                            <div className="custom-select common-div">

                                <select>

                                    <option>Brands</option>
                                    <option>Brands</option>

                                </select>

                            </div>

                            <div className="custom-select common-div">

                                <select>

                                    <option>Type</option>
                                    <option>Brands</option>

                                </select>

                            </div>

                            <div className="custom-select common-div">

                                <select>

                                    <option>Status</option>
                                    <option>Brands</option>

                                </select>

                            </div>

                            <div className="custom-select common-div">

                                <input className="calender-style" type="text" placeholder="dd/mm/yyyy" />

                            </div>

                            <div className="custom-select common-div">

                                <input className="calender-style" type="text" placeholder="dd/mm/yyyy" />

                            </div>

                            <div className="custom-select button-style common-div">

                                <button>Apply Filters</button>

                            </div>

                            <div className="custom-select button-style common-div">

                                <button className="border-style">Clear Filters</button>

                            </div>

                        </div>

                    </div>

                    <table>
                        <thead>
                            <tr>
                                <th style={{ width: '100px', textAlign: 'center' }}>ID</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Mobile</th>
                                <th style={{ width: '220px' }}>Email</th>
                                <th>Type</th>
                                <th>Message</th>
                                <th>Status</th>
                                <th>Created At</th>
                                <th>Updated At</th>
                                <th style={{ width: '200px' }}>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {data && data.data && data.data.map((contact, i) => {
                                console.log(contact)
                                return (
                                    <>
                                        <tr key={i}>
                                            <td>{i + 1}</td>
                                            <td>{contact.first_name}</td>
                                            <td>{contact.last_name}</td>
                                            <td> {contact.mobile}</td>
                                            <td>{contact.email}</td>
                                            <td>{contact.query_type}</td>
                                            <td>{contact.description}</td>
                                            <td>
                                                <button className={`active small-btn ${contact.status === 1 ? 'active' : 'inactive'} `} onClick={() => updateStatus(contact.status === 1 ? 2 : 1, contact._id)}>{contact.status === 1 ? 'active' : 'in-active'} </button>
                                            </td>
                                            <td>{convertTimeStamp(contact.createdAt)}</td>
                                            <td>{convertTimeStamp(contact.updatedAt)}</td>
                                            <td>
                                                <div className="table-buttons">
                                                    <button className="serive" onClick={() => {
                                                        const confirmBox = window.confirm(
                                                            `Do you really want to delete ${contact.name}?`
                                                        )
                                                        if (confirmBox === true) {
                                                            deleteContact(contact._id)
                                                        }
                                                    }}>Delete</button>
                                                </div>
                                            </td>
                                        </tr>
                                    </>
                                )
                            })}
                            {error &&

                                <tr >
                                    <td colSpan={9} style={{ textAlign: 'center' }}>
                                        Data not available
                                    </td>
                                </tr>

                            }
                        </tbody>
                    </table>
                </div>
                <Paginationn page={page} rowCount={data !== undefined ? data.data.length : ''} />
            </Layout>
        </>
    )
}


export default Index