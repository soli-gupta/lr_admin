import Breadcrumb from '@/components/common/Breadcrumb'
import Layout from '@/components/common/Layout'
import Head from 'next/head'
import axios from 'axios'
import { dateFormat } from '@/components/Helper'
import Link from 'next/link'
import useSWR from 'swr';
import { useEffect, useState } from 'react'
import Paginationn from '@/components/common/Pagination'
import { useRouter } from 'next/router'


const fetcher = (url) => axios.get(url, { headers: { token: `${localStorage.getItem("lr-admin-token")}` } }).then(res => res.data)

export default function Index() {

    // const [data, setData] = useState()
    let router = useRouter()
    const { page } = router.query;
    const { data, error } = useSWR(`${process.env.NEXT_PUBLIC_URL}admin/all-testimonial?page=${page}`, fetcher);


    if (error) return 'Opps something went wrong'
    if (!data) return 'Please wait ...'


    // const allTestimonialList = async () => {
    //    await axios.get(`${process.env.NEXT_PUBLIC_URL}admin/all-testimonial`, {
    //         headers: {
    //             'token': typeof window !== "undefined" ? localStorage.getItem("lr-admin-token") : false,
    //         }
    //     }).then(function (res) {
    //         if (res.data.status == 1) {
    //             setData(res.data.data)
    //         }
    //     }).catch(function (error) {
    //         console.log(error)

    //     });
    // }
    const updateStatus = async (status, id) => {
        await axios.get(`${process.env.NEXT_PUBLIC_URL}admin/active-deactive-testimonial?id=${id}&status=${status}`, {
            headers: {
                'token': typeof window !== "undefined" ? localStorage.getItem("lr-admin-token") : false,
            }
        }).then(function (res) {
            if (res.data.status == 1) {
                alert(res.data.message)
            }
        }).catch(function (error) {
            console.log(error)

        });
    }

    return (
        <>
            <Head>
                <title>LR | Testimonial</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="../../img/favicon.ico" />
            </Head>
            <Layout>
                <Breadcrumb title="Testimonial" addBtn="Add Testimonial" url="/admin/testimonial/add-testimonial" />
                <div className="main-data">

                    <div className="filters">

                        <div className="wrapper">

                            <div className="search common-div">

                                <input type="text" placeholder="Search here" />
                                <button></button>

                            </div>

                            <div className="custom-select common-div">
                                <select>
                                    <option>Brands</option>
                                    <option>Brands</option>
                                </select>
                            </div>

                            <div className="custom-select common-div">
                                <select>
                                    <option>Type</option>
                                    <option>Brands</option>
                                </select>
                            </div>

                            <div className="custom-select common-div">
                                <select>
                                    <option>Status</option>
                                    <option>Brands</option>
                                </select>
                            </div>

                            <div className="custom-select common-div">
                                <input className="calender-style" type="text" placeholder="dd/mm/yyyy" />
                            </div>

                            <div className="custom-select common-div">
                                <input className="calender-style" type="text" placeholder="dd/mm/yyyy" />
                            </div>

                            <div className="custom-select button-style common-div">
                                <button>Apply Filters</button>
                            </div>

                            <div className="custom-select button-style common-div">
                                <button className="border-style">Clear Filters</button>
                            </div>

                        </div>

                    </div>

                    <table>
                        <thead>
                            <tr>
                                <th style={{ width: '100px', textAlign: 'center' }}>ID</th>
                                <th style={{ width: '150px' }}>Image</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Product Name</th>
                                <th>Service Name</th>
                                <th>Type</th>
                                <th>Rating</th>
                                <th>Status</th>
                                <th>Created At</th>
                                <th>Update At</th>
                                <th style={{ width: '200px' }}>Action</th>
                            </tr>
                        </thead>
                        <tbody>

                            {data != undefined && data.data != undefined && data.data != '' ? <>
                                {data && data.data.map((testimonials, i) => {
                                    return (
                                        <tr key={i}>
                                            <td>  {i + 1} </td>
                                            <td>
                                                {testimonials.user_image ?
                                                    <img src={`${process.env.NEXT_PUBLIC_URL}${testimonials.user_image}`} width={70} />
                                                    : <img src="/img/image-placeholder.png" width={70} />}

                                            </td>
                                            <td> {testimonials.first_name} </td>
                                            <td> {testimonials.last_name} </td>
                                            <td> {testimonials.product_name} </td>
                                            <td> {testimonials.service_name} </td>
                                            <td>{testimonials.testimonial_type}</td>
                                            <td>{testimonials.rating}</td>
                                            <td>
                                                <button className={`active small-btn ${testimonials.status === 1 ? 'active' : 'inactive'} `} onClick={() => updateStatus(testimonials.status === 1 ? 2 : 1, testimonials._id)}>{testimonials.status === 1 ? 'active' : 'in-active'} </button>
                                            </td>
                                            <td> {dateFormat(testimonials.createdAt)} </td>
                                            <td> {dateFormat(testimonials.updatedAt)} </td>
                                            <td>
                                                <div className="table-buttons">
                                                    <Link href={`/admin/testimonial/add-testimonial?id=${testimonials._id}`}> <button className='duplicate'>Edit</button></Link>
                                                </div>
                                            </td>
                                        </tr>
                                    )
                                })}
                            </> : ''}
                        </tbody>
                    </table>
                    <div>
                        <Paginationn page={page} const rowCount={data !== undefined ? data.testimonialsCount : ''} />

                    </div>
                </div>
            </Layout>
        </>
    )
}